#!/bin/bash
# Script ini digunakan untuk mengkonfigurasikan firewall di OS *nix kamu
# Jika kamu ingin mengembangkan script ini, harap jangan hilangkan bagian copyright di bawah ini
# ===SOC===
# CopyRight: blusp10it and red-dragon, special thanks to bl4ckp0rt
# ===EOC===

# Inisialisasi variabel
trap ctrl_c INT

clear
# Fungsi trap, ketika user menekan CTRL+C, maka script akan membersihkan file temporer
function ctrl_c() {
     echo ""
     echo -e "\e[01;36mMembersihkan...\e[00m"
     ls /tmp/ > /tmp/daftar
     pid=$(cat /tmp/daftar | grep -w "pid")
     netTemp=$(cat /tmp/daftar | grep -w "netstat.tmp")
     netstat=$(cat /tmp/daftar | grep -w "netstat")
     if [ "$pid" == "pid" ]; then
          rm /tmp/pid
     fi
     if [ "$netTemp" == "netstat.tmp" ]; then
          rm /tmp/netstat.tmp
     fi
     if [ "$netstat" == "netstat" ] ; then
          rm /tmp/netstat
     fi
     rm /tmp/daftar
     exit
}
# Fungsi memasang firewall
pasang () {
     echo -e "\e[01;36mMemasang firewall...\e[00m"
     sleep 2
     iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
     iptables -A INPUT -p icmp -m icmp --icmp-type destination-unreachable -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type echo-reply -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type echo-request -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type parameter-problem -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type redirect -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type router-advertisement -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type router-solicitation -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type source-quench -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -m icmp --icmp-type time-exceeded -j REJECT --reject-with icmp-host-prohibited
     iptables -A INPUT -p icmp -j ACCEPT
     iptables -A INPUT -i lo -j ACCEPT
     iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited
     iptables -A FORWARD -j REJECT --reject-with icmp-host-prohibited
     echo -e "\e[01;36mBerhasil Di pasang!!!\e[00m"
     sleep 2
     clear
}
# Fungsi me-reset firewall
reset () {
     echo -e "\e[01;36mMe-reset firewall...\e[00m"
     sleep 2
     iptables -F
     arptables -F
     echo -e "\e[01;36mProses Reset Berhasil!!!\e[00m"
     sleep 2
     clear
}
# Fungsi melihat kondisi firewall
status () {
     echo -e "\e[01;36mBerikut adalah konfigurasi firewall kamu...\e[00m"
     iptables --list
     echo -e "\e[01;36mTekan Enter untuk melanjutkan...\e[00m"
     read return
     if [ "$return" == "" ]; then
          clear
     fi
}
# Fungsi memblokir IP attacker
block () {
     echo -e "\e[01;33mBerikut adalah daftar interface kamu yang sedang UP\e[00m"
     ifconfig | grep "Link encap" | awk '{print $1}'
     echo -en '\e[37;44m'"\033[1mInterface yang sedang kamu gunakan adalah:\033[0m "
     read interface
     echo -e "\e[01;33mIP Address Router kamu adalah \e[00m\c"
     route | grep $interface | grep default | awk '{print $2}'
     echo -e "\e[01;33mIP Address kamu adalah \e[00m\c"
     ifconfig $interface | grep "inet addr" | awk '{print $2}' | sed 's/addr://'
     echo -e "\e[01;33mHarap tunggu, Proses scanning pada network sedang berlangsung.\e[00m"
     arp -i $interface
     echo -en '\E[37;44m'"\033[1mTentukan IP address yang ingin kamu blokir\033[0m "
     read ip
     echo -en '\E[37;44m'"\033[1mTentukan MAC address yang ingin kamu blokir\033[0m "
     read mac
     iptables -A INPUT -s $ip -j DROP
     iptables -A OUTPUT -p tcp -d $ip -j DROP
     arptables -A INPUT --source-mac $mac -j DROP
     arptables -A OUTPUT -p tcp --destination-mac $mac -j DROP
     ifconfig $interface down
     echo -e "\e[01;37mProses Pemblokiran pada IP $ip dengan Mac Address $mac telah selesai\e[00m"
     echo -e "\e[01;37mMengktifkan kembali Interfaces kamu di $interface\e[00m"
     ifconfig $interface up
     sleep 2
     echo -e "\e[01;37mTekan Enter untuk melanjutkan...\e[00m"
     read return
     if [ "$return" == "" ]; then
          clear
     fi
}
# Fungsi cek port yang terbuka
cekport () {
netstat -lpn | grep -w "tcp" > /tmp/netstat.tmp
arrayProto=( $(cat /tmp/netstat.tmp | awk '{print $1}') )
arrayPort=( $(cat /tmp/netstat.tmp | awk '{print $4}' | sed "s/0.0.0.0://") )
arrayState=( $(cat /tmp/netstat.tmp | awk '{print $6}') )
arrayNamaProses=( $(cat /tmp/netstat.tmp | awk '{print $7}' | sed "s/.*\///") )
arrayPID=( $(cat /tmp/netstat.tmp | awk '{print $7}' | sed "s/\/.*//") )
namaproses=""
id=""
index="0"
for item in "${arrayNamaProses[@]}"; do
        if [ "$namaproses" ] && [ "$namaproses" == "$item" ] ; then id="$index" ; fi
        index=$(($index+1))
done
echo -e " No. | Proto | Port | Status | Nama Proses |  PID  \n-----|-------|------|--------|-------------|------"
loop=${#arrayNamaProses[@]}
for (( i=0;i<$loop;i++)); do
        printf ' %-3s | %-5s | %-4s | %-6s | %-11s | %-2s\n' "$(($i+1))" "${arrayProto[${i}]}" "${arrayPort[${i}]}" "${arrayState[${i}]}" "${arrayNamaProses[${i}]}" "${arrayPID[${i}]}"
        echo "$(($i+1))" "${arrayProto[${i}]}" "${arrayPort[${i}]}" "${arrayState[${i}]}" "${arrayNamaProses[${i}]}" "${arrayPID[${i}]}" >> /tmp/netstat
done
rm /tmp/netstat.tmp
# Fungsi untuk mentutup port
tutup_port () {
if [ "$(netstat -lpn | grep -w 'tcp')" == '' ]; then
     echo -e "Kamu tidak memiliki port yang terbuka!!!"
     sleep 2
     clear
     rm /tmp/netstat
     else
          echo -e ""
          echo -en '\e[37;44m'"\033[1mPilih nomor dari tabel proses yang akan dihentikan: \033[0m "
          read no
          command=$(cat /tmp/netstat | grep -w "$no" | awk '{print $11}')
          if [ "$command" == '' ]; then
               echo "Nomor tidak valid!!!"
               sleep 2
               rm /tmp/netstat
               else
                    $command > /tmp/pid
                    kill $(cat /tmp/pid)
                    rm /tmp/pid
                    echo -e "\e[0;31m=========================================\e[00m "
                    echo -e "\e[01;37mBerhasil menutup port $port!!!\e[00m"
                    echo -en "\e[01;37mTekan Enter untuk melanjutkan...\e[00m"
                    read return
                    if [ "$return" == "" ]; then
                         clear
                         rm /tmp/netstat /tmp/pid
                    fi
          fi
fi
clear
rm /tmp/netstat
}
# Fungsi untuk kembali ke menu utama
kembali () {
clear
}
# Fungsi untuk keluar
keluar () {
# Membersihkan sebelum keluar
echo -e "\nMembersihkan..."
ls /tmp/ > /tmp/daftar
pid=$(cat /tmp/daftar | grep -w "pid")
netTemp=$(cat /tmp/daftar | grep -w "netstat.tmp")
netstat=$(cat /tmp/daftar | grep -w "netstat")
if [ "$pid" == "pid" ]; then
     rm /tmp/pid
fi
if [ "$netTemp" == "netstat.tmp" ]; then
     rm /tmp/netstat.tmp
fi
if [ "$netstat" == "netstat" ] ; then
     rm /tmp/netstat
fi
rm /tmp/daftar
# Bye (=
echo -e "\e[01;37mTerima kasih sudah menggunakan script kami. Ingat, keamanan hanyalah soal waktu, bukan sebuah proses.\e[00m"
exit
}
echo -e "\e[01;37m##################################################\nPilihan: \e[00m"
cat << !
1. Tutup port berdasarkan nomor tabel
2. Kembali ke menu utama
3. Keluar dari program ini
!
echo -en '\e[37;44m'"\033[1mMasukkan pilihan\033[0m "
read pilport
case $pilport in
     1) tutup_port ;;
     2) kembali ;;
     3) keluar ;;
     *) echo "\"$pilport\" tidak valid " ; sleep 2 ; clear ;;
esac
}
# Fungsi keluar
keluar () {
     echo -e "\e[01;37mTerima kasih sudah menggunakan script kami. Ingat, keamanan hanyalah soal waktu, bukan sebuah proses.\e[00m"
     exit
}

# Fungsi versi
versi () {
     echo -e "\e[0;31m=========================================\e[00m "
     echo -e "\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x46\x69\x72\x65\x4e\x69\x78\x20\x56\x65\x72\x73\x69\x20\x30\x2e\x32\x20\x52\x31\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x0a\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x53\x63\x72\x69\x70\x74\x20\x62\x79\x20\x62\x6c\x75\x73\x70\x31\x30\x69\x74\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x2e\x0a" | awk '{printf "%s\n", $_}'
     echo -e "\e[0;31m=========================================\e[00m "
     echo -en "\e[01;37mTekan Enter untuk melanjutkan \e[00m"
     read key
     if [ "$key" == "" ]; then
     clear
     fi
}

# Loop tak berujung (=
while :
do
cat << !
....Easy Network Configuration Script.....
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~..=====...======.....=====.==...........~
~..==...==.==...=====.==.==.==.==.==.==..~
~..====.==.==...==..=.==..=.==.==.==.==..~
~..==...==.==...=====.==..=.==.==..===...~
~..==...==.==...==....==..=.==.==.==.==..~
~..==...==.==...=====.==..====.==.==.==..~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##########################################
# 1. Memasang firewall                   #
# 2. Me-reset settingan firewall         #
# 3. Mengecek status firewall            #
# 4. Memblokir IP attacker               #
# 5. Mengecek port TCP yang terbuka      #
# 6. Cek versi dan credits ;)            #
# 7. Keluar                              #
##########################################
!
# Mengecek arptables
if [ "$(dpkg -l | grep arptables | awk '{print $2}')" != "arptables" ];then
     echo -e "\e[0;31mPaket arptables belum terinstal!!!\e[00m"
     echo -en '\e[37;44m'"\033[1mApakah kamu mau menginstall paket ARPTABLES? (y/n) => \033[0m "
     read choicearp
     if [ $choicearp != 'y' ]; then
     echo -e "\e[0;31mExiting ...\e[00m \n\e[01;33mPastikan kamu sudah menginstall paket arptables sebelum melanjutkan (=\e[00m"
     exit 1
     else
     echo -e "Menginstall paket arptables..."
     apt-get update && apt-get install arptables -y
     echo -e "Selesai!!!"
     echo "Kembali ke menu awal..."
     sleep 2
     fi
fi
# Mengecek iptables
if [ "$(dpkg -l | grep iptables | awk '{print $2}')" != "iptables" ];then
     echo -e "\e[0;31mPaket iptables belum terinstal!!!\e[00m"
     echo -en '\e[37;44m'"\033[1mApakah kamu mau menginstall paket IPTABLES? (y/n) => \033[0m "
     read choiceip
     if [ $choiceip != 'y' ]; then
     echo -e "\e[0;31mExiting ...\e[00m \n\e[01;33mPastikan kamu sudah menginstall paket iptables sebelum melanjutkan (=\e[00m"
     exit 1
     else
     echo -e "Menginstall paket iptables..."
     apt-get update && apt-get install iptables -y
     echo -e "Selesai!!!"
     echo "Kembali ke menu awal..."
     sleep 2
     fi
     exit 1
fi
# Are you root?
if [ "$(id -u)" != "0" ]; then
     echo -e "\e[0;31mJalankan script ini sebagai user root!!!\e[00m" 
     whoami 1>&2
     exit 1
fi
# Memulai program
echo -en '\e[37;44m'"\033[1mPilih menu yang ada\033[0m " # Putih di dalam Box Biru
read pilihan
# Inisialisasi case
case $pilihan in
     1) pasang ;;
     2) reset ;;
     3) status ;;
     4) block ;;
     5) cekport ;;
     6) versi ;;
     7) keluar ;;
     *) echo "\"$pilihan\" tidak valid " ; sleep 1 ; clear ; 
esac
done

